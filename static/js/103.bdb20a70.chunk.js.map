{"version":3,"file":"static/js/103.bdb20a70.chunk.js","mappings":"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","sources":["webpack://Social_network/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.tsx","webpack://Social_network/./src/components/Users/user/user.module.css?aacb","components/Users/user/User.tsx","components/Users/Users.tsx","redax/users-selectors.ts","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selectedPageContainer\":\"Paginator_selectedPageContainer__4gyxj\",\"button\":\"Paginator_button__byWM+\",\"pageNumber\":\"Paginator_pageNumber__zMR7C\",\"selectedPage\":\"Paginator_selectedPage__N0MQK\"};","import React, {useState} from 'react';\r\nimport s from \"./Paginator.module.css\";\r\n\r\n\r\ntype PaginatorPropsType = {\r\n    changeCurrentPageHandler: (currentPage: number) => void\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    currentPage: number\r\n    portionSize?: number\r\n}\r\nexport const Paginator = ({\r\n                              pageSize,\r\n                              totalItemsCount,\r\n                              currentPage,\r\n                              changeCurrentPageHandler,\r\n                              portionSize = 5,\r\n                          }: PaginatorPropsType) => {\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    const pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState(Math.ceil(currentPage / pageSize))\r\n    const leftPortionPage = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPage = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={s.selectedPageContainer}>\r\n            {portionNumber > 1 &&\r\n                <button className={s.button} onClick={() => setPortionNumber(portionNumber - 1)}>{'<'}</button>\r\n            }\r\n            {pages.filter(p => p >= leftPortionPage && p <= rightPortionPage)\r\n                .map(p => {\r\n                    const activePage = currentPage === p ? s.selectedPage : ''\r\n                    return (<span key={p} className={`${s.pageNumber} ${activePage}`}\r\n                                  onClick={() => {\r\n                                      changeCurrentPageHandler(p)\r\n                                  }}>\r\n                        {p}\r\n                    </span>)\r\n                })\r\n            }\r\n            {\r\n                portionCount > portionNumber &&\r\n                <button className={s.button} onClick={() => setPortionNumber(portionNumber + 1)}>{'>'}</button>\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"userContainer\":\"user_userContainer__v87BT\",\"wrapper\":\"user_wrapper__qW8Qu\",\"imgAndButton\":\"user_imgAndButton__leGg9\",\"navLink\":\"user_navLink__k5cEs\",\"photo\":\"user_photo__qldFi\",\"name\":\"user_name__5tNsf\",\"button\":\"user_button__epASf\"};","import React from 'react';\r\nimport s from \"./user.module.css\";\r\nimport photo from \"../../../images/images.jpg\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport {UsersPageType} from \"../../../redax/usersReducer\";\r\n\r\n\r\ntype UsersPropsType = {\r\n    user: UsersPageType\r\n    follow: (id: number) => void\r\n    unFollow: (id: number) => void\r\n    disabled: number[]\r\n}\r\nexport const User = ({\r\n                         user,\r\n                         follow,\r\n                         unFollow,\r\n                         disabled\r\n\r\n                     }: UsersPropsType) => {\r\n\r\n\r\n    const unFollowHandler = (id: number) => {\r\n        unFollow(id)\r\n    }\r\n\r\n    const followHandler = (id: number) => {\r\n        follow(id)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.wrapper}>\r\n                <div className={s.imgAndButton}>\r\n                        <NavLink to={`/profile/${user.id}`} className={s.navLink}>\r\n                            <img className={s.photo} src={user.photos.small === null ? photo : user.photos.small}\r\n                                 alt=\"img\"/>\r\n                            <div className={s.name}>{user.name}</div>\r\n                        </NavLink>\r\n                    <div>\r\n                        {\r\n                            user.followed ?\r\n                                <button className={s.button} onClick={() => {\r\n                                    unFollowHandler(user.id)\r\n                                }} disabled={disabled.some(id => id === user.id)}>UnFollow</button> :\r\n                                <button className={s.button} onClick={() => {\r\n                                    followHandler(user.id)\r\n                                }} disabled={disabled.some(id => id === user.id)}>Follow</button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport {UsersPageType} from \"../../redax/usersReducer\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {User} from \"./user/User\";\r\nimport s from './user/user.module.css'\r\n\r\n\r\ntype UsersPropsType = {\r\n    users: Array<UsersPageType>\r\n    changeCurrentPageHandler: (currentPage: number) => void\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    follow: (id: number) => void\r\n    unFollow: (id: number) => void\r\n    disabled: number[]\r\n}\r\nexport const Users: React.FC<UsersPropsType> = ({\r\n                                                    users,\r\n                                                    pageSize,\r\n                                                    totalUsersCount,\r\n                                                    currentPage,\r\n                                                    follow,\r\n                                                    unFollow,\r\n                                                    changeCurrentPageHandler,\r\n                                                    disabled\r\n\r\n                                                }) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.userContainer}>\r\n            {users.map(u =>\r\n                    <User key={u.id}\r\n                          user={u}\r\n                          follow={follow}\r\n                          unFollow={unFollow}\r\n                          disabled={disabled}/>\r\n\r\n            )}\r\n            </div>\r\n            <Paginator changeCurrentPageHandler={changeCurrentPageHandler}\r\n                       pageSize={pageSize}\r\n                       totalItemsCount={totalUsersCount}\r\n                       currentPage={currentPage}/>\r\n        </div>\r\n    );\r\n};\r\n","import {AppStateType} from \"./redux-store\";\r\n\r\nexport const getUsers = (state: AppStateType)=> state.usersReducer.users\r\nexport const getPageSize = (state: AppStateType)=> state.usersReducer.pageSize\r\nexport const getTotalUsersCount = (state: AppStateType)=> state.usersReducer.totalUsersCount\r\nexport const getCurrentPage = (state: AppStateType)=> state.usersReducer.currentPage\r\nexport const getIsFetching = (state: AppStateType)=> state.usersReducer.isFetching\r\nexport const getFollowingInProgress = (state: AppStateType)=> state.usersReducer.followingInProgress","import React, {FC} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redax/redux-store\";\r\nimport {\r\n    changeCurrentPageTC,\r\n    FollowAC,\r\n    followUserTC,\r\n    getUsersTC,\r\n    SetUsersAC,\r\n    UnFollowAC,\r\n    unFollowUserTC,\r\n    UsersPageType\r\n} from \"../../redax/usersReducer\";\r\nimport {Users} from \"./Users\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redax/users-selectors\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    users: Array<UsersPageType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n\r\n}\r\ntype mapDispatchToPropsType = {\r\n    follow: (id: number) => void\r\n    unFollow: (id: number) => void\r\n    setUsers: (users: UsersPageType[]) => void,\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    changeCurrentPage: (currentPage: number, pageSize: number) => void\r\n    unFollowUser: (id: number) => void\r\n    followUser: (id: number) => void\r\n\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & mapDispatchToPropsType\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType, Array<UsersPageType>> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    changeCurrentPageHandler = (currentPage: number) => {\r\n        this.props.changeCurrentPage(currentPage, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ?\r\n                <Preloader/>\r\n                :\r\n                <Users users={this.props.users}\r\n                       pageSize={this.props.pageSize}\r\n                       totalUsersCount={this.props.totalUsersCount}\r\n                       currentPage={this.props.currentPage}\r\n                       follow={this.props.followUser}\r\n                       unFollow={this.props.unFollowUser}\r\n                       changeCurrentPageHandler={this.changeCurrentPageHandler}\r\n                       disabled={this.props.followingInProgress}\r\n                />}\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType):MapStateToPropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount:getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose<FC>(\r\n    connect(mapStateToProps, {\r\n        follow: FollowAC,\r\n        unFollow: UnFollowAC,\r\n        setUsers: SetUsersAC,\r\n        getUsers: getUsersTC,\r\n        changeCurrentPage: changeCurrentPageTC,\r\n        unFollowUser: unFollowUserTC,\r\n        followUser: followUserTC\r\n    }),\r\n    WithAuthRedirect\r\n)(UsersContainer)"],"names":["Paginator","pageSize","totalItemsCount","currentPage","changeCurrentPageHandler","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPage","rightPortionPage","className","s","onClick","filter","p","map","activePage","User","user","follow","unFollow","disabled","to","id","src","photos","small","photo","alt","name","followed","some","Users","users","totalUsersCount","u","getUsers","state","usersReducer","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","UsersContainer","props","changeCurrentPage","this","Preloader","followUser","unFollowUser","React","compose","connect","FollowAC","UnFollowAC","setUsers","SetUsersAC","getUsersTC","changeCurrentPageTC","unFollowUserTC","followUserTC","WithAuthRedirect"],"sourceRoot":""}